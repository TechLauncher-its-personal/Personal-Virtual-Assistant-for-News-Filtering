thingpedia_name: Almond 4 GNOME
thingpedia_description: Your Almond, on your Free Desktop OS
repository: https://github.com/stanford-oval/almond-gnome
subcategory: service

class: |
  class @org.thingpedia.builtin.thingengine.gnome {
    import loader from @org.thingpedia.builtin();
    import config from @org.thingpedia.config.builtin();

    query get_screenshot(out picture_url: Entity(tt:picture))
    #_[canonical="screenshot on laptop"]
    #_[confirmation="a screenshot of your PC"]
    #_[confirmation_remote="a screenshot of $__person's PC"]
    #_[formatted=[{type="picture",url="${picture_url}"}]]
    #[doc="get a screenshot from your PC"];

    action open_app(in req app_id: Entity(org.freedesktop:app_id) #_[prompt="What app do you want to open?"],
                    in opt url: Entity(tt:url) #_[prompt="What file do you want to open?"])
    #_[canonical="open app on laptop"]
    #_[confirmation="open $app_id"]
    #_[confirmation_remote="open $app_id in $__person's PC"]
    #[doc="open the given app (optionally with a file)"]
    #[confirm=false];

    action lock()
    #_[canonical="lock on laptop"]
    #_[confirmation="lock your PC"]
    #_[confirmation_remote="lock $__person's PC"]
    #[doc="lock your PC"];

    action set_power(in req power: Enum(on,off) #_[prompt="Do you want to turn it on or off?"])
    #_[canonical="set power on laptop"]
    #_[confirmation="turn $power your PC"]
    #_[confirmation_remote="turn $power $__person's PC"]
    #[doc="switch on/off"];

    action create_file(in req file_name: Entity(tt:path_name) #_[prompt="What should be the name of the file?"],
                       in req contents: String #_[prompt="What do you want to write in the file?"])
    #_[canonical="create file on laptop"]
    #_[confirmation="create a new file in your laptop named $file_name containing $contents"]
    #_[confirmation_remote="create a new file in $__person's laptop named $file_name containing $contents"]
    #[doc="create a new file in your laptop"];

    action delete_file(in req file_name: Entity(tt:path_name) #_[prompt="What file do you want to delete?"])
    #_[canonical="delete file on laptop"]
    #_[confirmation="delete the file $file_name from your laptop"]
    #_[confirmation_remote="delete the file $file_name from $__person's laptop"]
    #[doc="delete a file from your laptop"];

    action set_background(in req picture_url: Entity(tt:picture) #_[prompt="What picture do you want to use as the background?"])
    #_[canonical="set background on laptop"]
    #_[confirmation="set your laptop's background to $picture_url"]
    #_[confirmation_remote="set $__person's laptop's background to $picture_url"]
    #[doc="changes the laptop wallpaper"];
  }

dataset: |
  dataset @org.thingpedia.builtin.thingengine.gnome #[language="en"] {
    action (p_app_id :Entity(org.freedesktop:app_id))  := @org.thingpedia.builtin.thingengine.gnome.open_app(app_id=p_app_id)
    #_[utterances=["open $p_app_id","open $p_app_id on my laptop","open $p_app_id on my pc","start $p_app_id"]];

    action (p_url :Entity(tt:url), p_app_id :Entity(org.freedesktop:app_id))  := @org.thingpedia.builtin.thingengine.gnome.open_app(app_id=p_app_id, url=p_url)
    #_[utterances=["open $p_url with $p_app_id","open $p_url with $p_app_id on my laptop","use $p_app_id to open $p_url"]];

    action  := @org.thingpedia.builtin.thingengine.gnome.lock()
    #_[utterances=["lock my pc","lock my laptop","activate the lock screen on my laptop"]];

    action (p_power :Enum(on,off))  := @org.thingpedia.builtin.thingengine.gnome.set_power(power=p_power)
    #_[utterances=["turn $p_power my pc","turn $p_power my laptop"]];

    action (p_file_name :Entity(tt:path_name))  := @org.thingpedia.builtin.thingengine.gnome.create_file(file_name=p_file_name)
    #_[utterances=["create a file named ${p_file_name:const} on my laptop"]];

    action (p_file_name :Entity(tt:path_name), p_contents :String)  := @org.thingpedia.builtin.thingengine.gnome.create_file(file_name=p_file_name, contents=p_contents)
    #_[utterances=["create a file named ${p_file_name:const} on my laptop containing $p_contents"]];

    action (p_file_name :Entity(tt:path_name))  := @org.thingpedia.builtin.thingengine.gnome.delete_file(file_name=p_file_name)
    #_[utterances=["delete ${p_file_name} from my laptop","delete the file named ${p_file_name:const} from my laptop"]];

    action  := @org.thingpedia.builtin.thingengine.gnome.set_background()
    #_[utterances=["change the background on my laptop"]];

    action (p_picture_url :Entity(tt:picture))  := @org.thingpedia.builtin.thingengine.gnome.set_background(picture_url=p_picture_url)
    #_[utterances=["set the background of my laptop to ${p_picture_url}","use ${p_picture_url} as the background of my laptop"]];

    action  := @org.thingpedia.builtin.thingengine.gnome.delete_file()
    #_[utterances=["delete a file from my laptop"]];

    query  := @org.thingpedia.builtin.thingengine.gnome.get_screenshot()
    #_[utterances=["a screenshot of my laptop",", take a screenshot of my laptop",", save a screenshot of my laptop"]];
  }
